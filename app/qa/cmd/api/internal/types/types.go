// Code generated by goctl. DO NOT EDIT.
package types

type User struct {
	Uid      int64  `json:"uid"`
	UserName string `json:"user_name"`
	Avatar   string `json:"avatar"`
	Gender   int    `json:"gender"`
}

type QuestionBase struct {
	User  User   `form:"user"  json:"user"`
	Topic string `form:"topic" json:"topic"`
	Title string `form:"title" json:"title"`
	Value string `form:"value" json:"value"`
}

type QuestionInfo struct {
	Qid          int64        `json:"qid"`
	QuestionBase QuestionBase `json:"question_base"`
	Comments     int64        `json:"comments"`
	Followers    int64        `json:"followers"`
	Likes        int64        `json:"likes"`
	Pageviews    int64        `json:"pageviews"`
	UpdateAt     int64        `json:"updateAt"`
}

type PostQuestionReq struct {
	Uid      int64  `form:"uid" json:"uid"`
	Topic    string `form:"topic" json:"topic"`
	Title    string `form:"title" json:"title"`
	Value    string `form:"value" json:"value"`
	CreateAt int64  `form:"create_at" json:"create_at"`
}

type PostQuestionResp struct {
	Data    PostQuestionReq `json:"data"`
	Message string          `json:"message"`
	Status  int             `json:"status"`
}

type UpdateQuestionReq struct {
	Uid      int64  `form:"uid" json:"uid"`
	Qid      int64  `form:"qid" json:"qid"`
	Topic    string `form:"topic" json:"topic"`
	Title    string `form:"title" json:"title"`
	Value    string `form:"value" json:"value"`
	Comments int64  `form:"comment" json:"comments"`
	UpdateAt int64  `form:"delete_at" json:"update_at"`
}

type UpdateQuestionResp struct {
	Data    UpdateQuestionReq `json:"data"`
	Message string            `json:"message"`
	Status  int               `json:"status"`
}

type DeleteQuestionReq struct {
	Uid      int64 `form:"uid"`
	Qid      int64 `form:"qid"`
	DeleteAt int64 `form:"delete_at"`
}

type DeleteQuestionResp struct {
	Message string `json:"message"`
	Status  int    `json:"status"`
}

type GetQuestionReq struct {
	Id       int64  `form:"qid"`
	PageSize int64  `form:"page_size"`
	Page     int64  `form:"page"`
	OderBy   string `form:"oderby"`
}

type GetQuestionResp struct {
	QuestionInfo QuestionInfo `json:"question_info"`
	AnswerLists  []AnswerInfo `json:"answerLists"`
	Message      string       `json:"message"`
	Status       int          `json:"status"`
}

type AnswerInfo struct {
	User        User   `json:"'user'"`
	Value       string `json:"value"`
	Comments    int64  `json:"comments"`
	Agrees      int64  `json:"agrees"`
	DisAgrees   int64  `json:"dis_agrees"`
	Likes       int64  `json:"likes"`
	Collections int64  `json:"collections"`
	UpdateAt    int64  `json:"update_at"`
}

type PostAnswerReq struct {
	Uid      int64  `form:"uid" json:"uid"`
	Pid      int64  `form:"pid" json:"pid"`
	Value    string `form:"value" json:"value"`
	Type     string `form:"type" json:"type"`
	CreateAt int64  `form:"create_at" json:"create_at"`
}

type PostAnswerResp struct {
	Data    PostAnswerReq `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

type UpdateAnswerReq struct {
	Uid      int64  `form:"uid" json:"uid"`
	Pid      int64  `form:"pid" json:"pid"`
	Value    string `form:"value" json:"value"`
	UpdateAt int64  `form:"update_at" json:"update_at"`
}

type UpdateAnswerResp struct {
	Data    UpdateAnswerReq `json:"data"`
	Message string          `json:"message"`
	Status  int             `json:"status"`
}

type DeleteAnswerReq struct {
	Uid      int64 `form:"uid"`
	Qid      int64 `form:"qid"`
	DeleteAt int64 `form:"delete_at"`
}

type DeleteAnswerResp struct {
	Message string `json:"message" "`
	Status  int    `json:"status"`
}
