// Code generated by goctl. DO NOT EDIT!
// Source: comment.proto

package comment

import (
	"context"

	"quora/app/comment/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddChildCommentReq       = pb.AddChildCommentReq
	AddChildCommentResp      = pb.AddChildCommentResp
	AddCommentReq            = pb.AddCommentReq
	AddCommentResp           = pb.AddCommentResp
	ChildComment             = pb.ChildComment
	CommentBase              = pb.CommentBase
	DelChildCommentReq       = pb.DelChildCommentReq
	DelChildCommentResp      = pb.DelChildCommentResp
	DelCommentReq            = pb.DelCommentReq
	DelCommentResp           = pb.DelCommentResp
	GetChildCommentByPidReq  = pb.GetChildCommentByPidReq
	GetChildCommentByPidResp = pb.GetChildCommentByPidResp
	GetCommentByPidReq       = pb.GetCommentByPidReq
	GetCommentByPidResp      = pb.GetCommentByPidResp
	SearchChildCommentReq    = pb.SearchChildCommentReq
	SearchChildCommentResp   = pb.SearchChildCommentResp
	SearchCommentReq         = pb.SearchCommentReq
	SearchCommentResp        = pb.SearchCommentResp
	UpdateChildCommentReq    = pb.UpdateChildCommentReq
	UpdateChildCommentResp   = pb.UpdateChildCommentResp
	UpdateCommentReq         = pb.UpdateCommentReq
	UpdateCommentResp        = pb.UpdateCommentResp

	Comment interface {
		AddChildComment(ctx context.Context, in *AddChildCommentReq, opts ...grpc.CallOption) (*AddChildCommentResp, error)
		UpdateChildComment(ctx context.Context, in *UpdateChildCommentReq, opts ...grpc.CallOption) (*UpdateChildCommentResp, error)
		DelChildComment(ctx context.Context, in *DelChildCommentReq, opts ...grpc.CallOption) (*DelChildCommentResp, error)
		GetChildCommentByPId(ctx context.Context, in *GetChildCommentByPidReq, opts ...grpc.CallOption) (*GetChildCommentByPidResp, error)
		SearchChildComment(ctx context.Context, in *SearchChildCommentReq, opts ...grpc.CallOption) (*SearchChildCommentResp, error)
		// -----------------------comment-----------------------
		AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error)
		UpdateComment(ctx context.Context, in *UpdateCommentReq, opts ...grpc.CallOption) (*UpdateCommentResp, error)
		DelComment(ctx context.Context, in *DelCommentReq, opts ...grpc.CallOption) (*DelCommentResp, error)
		GetCommentByPid(ctx context.Context, in *GetCommentByPidReq, opts ...grpc.CallOption) (*GetCommentByPidResp, error)
		SearchComment(ctx context.Context, in *SearchCommentReq, opts ...grpc.CallOption) (*SearchCommentResp, error)
	}

	defaultComment struct {
		cli zrpc.Client
	}
)

func NewComment(cli zrpc.Client) Comment {
	return &defaultComment{
		cli: cli,
	}
}

func (m *defaultComment) AddChildComment(ctx context.Context, in *AddChildCommentReq, opts ...grpc.CallOption) (*AddChildCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.AddChildComment(ctx, in, opts...)
}

func (m *defaultComment) UpdateChildComment(ctx context.Context, in *UpdateChildCommentReq, opts ...grpc.CallOption) (*UpdateChildCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.UpdateChildComment(ctx, in, opts...)
}

func (m *defaultComment) DelChildComment(ctx context.Context, in *DelChildCommentReq, opts ...grpc.CallOption) (*DelChildCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.DelChildComment(ctx, in, opts...)
}

func (m *defaultComment) GetChildCommentByPId(ctx context.Context, in *GetChildCommentByPidReq, opts ...grpc.CallOption) (*GetChildCommentByPidResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.GetChildCommentByPId(ctx, in, opts...)
}

func (m *defaultComment) SearchChildComment(ctx context.Context, in *SearchChildCommentReq, opts ...grpc.CallOption) (*SearchChildCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.SearchChildComment(ctx, in, opts...)
}

// -----------------------comment-----------------------
func (m *defaultComment) AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.AddComment(ctx, in, opts...)
}

func (m *defaultComment) UpdateComment(ctx context.Context, in *UpdateCommentReq, opts ...grpc.CallOption) (*UpdateCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.UpdateComment(ctx, in, opts...)
}

func (m *defaultComment) DelComment(ctx context.Context, in *DelCommentReq, opts ...grpc.CallOption) (*DelCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.DelComment(ctx, in, opts...)
}

func (m *defaultComment) GetCommentByPid(ctx context.Context, in *GetCommentByPidReq, opts ...grpc.CallOption) (*GetCommentByPidResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.GetCommentByPid(ctx, in, opts...)
}

func (m *defaultComment) SearchComment(ctx context.Context, in *SearchCommentReq, opts ...grpc.CallOption) (*SearchCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.SearchComment(ctx, in, opts...)
}
