// Code generated by goctl. DO NOT EDIT!
// Source: action.proto

package server

import (
	"context"

	"quora/app/action/cmd/rpc/internal/logic"
	"quora/app/action/cmd/rpc/internal/svc"
	"quora/app/action/cmd/rpc/pb"
)

type ActionServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedActionServer
}

func NewActionServer(svcCtx *svc.ServiceContext) *ActionServer {
	return &ActionServer{
		svcCtx: svcCtx,
	}
}

func (s *ActionServer) AddAgree(ctx context.Context, in *pb.AgreeReq) (*pb.AgreeResp, error) {
	l := logic.NewAddAgreeLogic(ctx, s.svcCtx)
	return l.AddAgree(in)
}

func (s *ActionServer) DisAgree(ctx context.Context, in *pb.AgreeReq) (*pb.AgreeResp, error) {
	l := logic.NewDisAgreeLogic(ctx, s.svcCtx)
	return l.DisAgree(in)
}

func (s *ActionServer) Follow(ctx context.Context, in *pb.FollowReq) (*pb.FollowResp, error) {
	l := logic.NewFollowLogic(ctx, s.svcCtx)
	return l.Follow(in)
}

func (s *ActionServer) Like(ctx context.Context, in *pb.LikeReq) (*pb.LikeResp, error) {
	l := logic.NewLikeLogic(ctx, s.svcCtx)
	return l.Like(in)
}

func (s *ActionServer) Collection(ctx context.Context, in *pb.CollectionReq) (*pb.CollectionResp, error) {
	l := logic.NewCollectionLogic(ctx, s.svcCtx)
	return l.Collection(in)
}
